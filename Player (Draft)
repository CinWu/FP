import java.util.ArrayList;
import java.io.*;
import java.util.*;

//If you have time, feel free to add names.
//I felt like having these things in team was inefficient....

public class Player {


    public ArrayList<Character> teemo;
    public ArrayList<Character> select; //Choices of party
    public String[] NAMES = new String[36]; // Names that are totally not ripped off from games
    public Player() {

    private InputStreamReader isr;
    private BufferedReader in;


    public Player(){
        isr = new InputStreamReader( System.in );
        in = new BufferedReader( isr );
        	teemo = new ArrayList();
	select = new ArrayList();
	NAMES[0] = "Ephraim";
	NAMES[1] = "Eirika";
	NAMES[2] = "Tiki";
	NAMES[3] = "Roy";
	NAMES[4] = "Marth";
	NAMES[5] = "Ike";
	NAMES[6] = "Mist";
	NAMES[7] = "Sothe";
	NAMES[8] = "Lute";
	NAMES[9] = "Marche";
	NAMES[10] = "Cid";
	NAMES[11] = "Ritz";
	NAMES[12] = "Montblanc";
	NAMES[13] = "Mewt";
	NAMES[14] = "Doned";
	NAMES[15] = "Zack";
	NAMES[16] = "Cloud";
	NAMES[17] = "Tifa";
	NAMES[18] = "Rinoa";
	NAMES[19] = "Squall";
	NAMES[20] = "Laguna";
	NAMES[21] = "Aerith";
	NAMES[22] = "Sephiroth";
	NAMES[23] = "Zidane";
	NAMES[24] = "Garnet";
	NAMES[25] = "Barrett";
	NAMES[26] = "Rydia";
	NAMES[27] = "Cecil";
	NAMES[28] = "Kain";
	NAMES[29] = "Rosa";
	NAMES[30] = "Palom";
	NAMES[31] = "Porom";
	NAMES[32] = "Palutena";
	NAMES[33] = "Pitt";
	NAMES[34] = "Eris";
	NAMES[35] = "Huenkel";
	
	showChoices();
    }

    }    

    public Character makeYourChar() {
        System.out.print("Young hero, what is your name?");
        String tempName = in.readLine();
        System.out.println("Ah, what a fine name for a hero!");
        System.out.println("Now, it's time for you to choose your profession");
        System.our.print("Choose to be a Warrior, Mage, Scout, Tamer, or Cestus.");
        System.out.println("");
        System.out.println("WARNING: ONCE YOU HAVE CHOSEN YOUR PROFESSION." +
                           "\n CANNOT SWITCH LATER. ANSWER CAREFULLY.");
        String tempClass = in.readLine();
    }

	

    //===================Helper Functions=============

    //Random selection of characters for the player to add to team
    public void showChoices() {
	while ( select.size() < 12 ){
	    int n = (int) ( Math.random()*NAMES.length );
	    int i = (int) ( Math.random()*5 );
	    if ( i == 0 )
		select.add(new Scout(NAMES[n]));
	    else if ( i == 1 ) 
		select.add(new Warrior(NAMES[n]));
	    else if ( i == 2 ) 
		select.add(new Mage(NAMES[n]));
	    else if ( i == 3 ) 
		select.add(new Cestus(NAMES[n]));
	    else if ( i == 4 ) 
		select.add(new Tamer(NAMES[n]));

	}

	while ( teemo.size() < 6 ) {
	    
	    printCharList( select );
	    System.out.print( "Choose your team members wisely!" );

	    choose();
	}
	printCharList( teemo );
    }

    //Choose a character to add
    public Character choose() { 
	int choice = 13;
	Character charPick = select.get(0);
	try {
	    choice = Integer.parseInt(in.readLine());

	}
	catch ( IOException e ) {
	    System.out.println( "Silly player, that is not an option." );
	    choose();
	}
	finally {
	    if ( choice > 0 && choice <= select.size() ) {
		charPick = select.get(choice - 1); 
		addTeamMember( charPick );
		select.remove( charPick );
	    }
	    else {
		System.out.println( "Silly player, that is not an option." );
		choose();
	    }
	}
	return charPick;
    }

    //add to team
    public ArrayList<Character> addTeamMember( Character c ) {
	if ( !isFull() ) 
	    teemo.add( c );
	else 
	    System.out.println( "Sorry, party is full." );

	return teemo;
    }
    
    public boolean isFull() {
	if ( teemo.size() == 6 ) {
	    return true;
	}
	return false;
    }

    //Printing stuffs

    public String printCharList( ArrayList<Character> l ) {
	String choices = "";

	for ( int i = 0; i < l.size(); i++ )
	    choices +="=="+ (i+1) + "==\n"+ l.get(i) + "\n";
	System.out.println( choices );
	return choices;
    }

    public String toString() {
	String team = "";
	for ( int i = 0; i < teemo.size(); i++ )
	    team += teemo.get(i) + "\n";
	return team;
    }
 
    /*For testing purposes	
    public static void main ( String args[] ) {
	Player t = new Player();
    }
    */
 
   
}
